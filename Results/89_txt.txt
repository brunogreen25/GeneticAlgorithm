Algorithm type: =AlgorithmType.STEADY_STATE
_Perform separately=False
_Population Initialization function: =init_population
_Next Generation function: =replace_the_worst_parent
_Fitness function: =fitness_ttp
_Selection TSP: =r_tournament_selection_with_replacement
_Crossover TSP=order_crossover
_Mutation TSP: =two_opt
_Selection KP: =r_tournament_selection_with_replacement
_Crossover KP: =n_point_crossover
_Mutation KP: =exchange
_Population size: =10
_Iteration number: =15
_Survival/mortality rate: =7
_Elitism: =True
_TSP path: =[10, 46, 40, 11, 36, 30, 34, 15, 35, 6, 32, 48, 17, 29, 42, 9, 5, 31, 39, 25, 8, 51, 50, 43, 20, 1, 14, 27, 49, 44, 19, 38, 13, 33, 7, 18, 12, 21, 47, 0, 23, 26, 45, 37, 41, 2, 24, 16, 4, 22, 3, 28]
_KP path: =[[], [0, 0, 1, 0, 1, 0, 0, 0, 1, 1], [0, 1, 1, 1, 0, 1, 0, 0, 0, 1], [1, 0, 0, 0, 1, 1, 1, 1, 0, 0], [1, 0, 0, 1, 1, 1, 1, 0, 1, 0], [0, 1, 0, 1, 1, 1, 1, 1, 0, 0], [0, 0, 0, 0, 1, 0, 1, 0, 0, 1], [1, 1, 1, 1, 0, 1, 0, 1, 0, 0], [1, 0, 0, 0, 0, 0, 0, 0, 1, 0], [1, 1, 1, 1, 0, 0, 0, 0, 0, 1], [1, 1, 1, 0, 1, 0, 0, 0, 1, 1], [1, 0, 0, 0, 0, 1, 0, 0, 0, 0], [0, 0, 0, 0, 1, 1, 0, 0, 1, 1], [1, 1, 0, 1, 1, 0, 1, 0, 0, 1], [0, 1, 1, 1, 1, 1, 1, 1, 1, 0], [1, 1, 0, 0, 0, 0, 0, 0, 0, 1], [0, 1, 1, 0, 0, 0, 0, 0, 0, 0], [1, 0, 0, 0, 1, 0, 1, 0, 0, 0], [1, 0, 0, 1, 1, 0, 0, 1, 0, 0], [0, 0, 1, 1, 0, 1, 1, 1, 0, 0], [1, 1, 0, 1, 1, 1, 0, 0, 1, 0], [0, 0, 0, 1, 0, 0, 0, 1, 1, 1], [0, 1, 0, 1, 0, 0, 1, 0, 0, 0], [1, 0, 0, 0, 0, 1, 0, 1, 1, 1], [0, 0, 0, 1, 1, 1, 1, 0, 1, 1], [1, 0, 0, 1, 1, 0, 0, 1, 1, 1], [0, 1, 1, 0, 1, 0, 1, 0, 1, 1], [0, 0, 0, 1, 1, 1, 0, 0, 0, 0], [1, 0, 0, 0, 1, 0, 1, 0, 1, 0], [0, 0, 1, 1, 0, 0, 0, 0, 1, 0], [0, 0, 1, 0, 0, 1, 0, 1, 1, 0], [0, 1, 1, 1, 1, 1, 0, 1, 0, 0], [1, 1, 0, 0, 0, 1, 0, 1, 0, 1], [0, 1, 0, 0, 1, 1, 1, 1, 0, 0], [1, 1, 1, 1, 1, 1, 0, 0, 0, 1], [1, 1, 1, 0, 0, 1, 0, 1, 1, 1], [0, 1, 1, 1, 0, 1, 0, 0, 0, 1], [1, 1, 0, 0, 0, 0, 1, 1, 1, 0], [1, 0, 0, 0, 0, 1, 0, 0, 1, 1], [1, 1, 1, 1, 0, 0, 1, 0, 1, 0], [1, 0, 1, 1, 0, 0, 1, 0, 1, 0], [0, 0, 0, 0, 0, 0, 1, 0, 1, 0], [1, 1, 1, 1, 0, 1, 0, 0, 0, 0], [1, 0, 1, 1, 0, 1, 0, 1, 0, 0], [1, 1, 1, 1, 0, 0, 1, 0, 1, 1], [0, 1, 0, 1, 1, 0, 1, 0, 0, 1], [1, 1, 1, 0, 1, 1, 1, 1, 0, 1], [0, 0, 0, 0, 0, 0, 1, 0, 0, 0], [0, 1, 0, 0, 0, 0, 0, 0, 0, 0], [1, 1, 1, 1, 0, 1, 0, 1, 0, 0], [1, 0, 0, 1, 0, 1, 1, 1, 0, 1], [0, 0, 1, 0, 1, 1, 0, 1, 1, 0]]
_Fitness value of the best chromosome: =18836.95186270315
_Average fitness value of the population: =15558.158242472211
_Age of the best chromosome (num of iterations it has lived): =2
_Local Search function: =greedy_hill_climbing
_Neighborhood TSP: =insertion
_Neighborhood KP: =bit_flip
_Number of neighbors: =10
_Number of max iterations in local search: =20
_KP constraint solver function: =kp_hard_constraint_solver
_