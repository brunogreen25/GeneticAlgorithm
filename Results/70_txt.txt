Algorithm type: =AlgorithmType.GENERATIONAL
_Perform separately=True
_Population Initialization function: =init_population
_Next Generation function: =replace_the_worst_parent
_Fitness function: =fitness_ttp
_Selection TSP: =r_tournament_selection_with_replacement
_Crossover TSP=order_crossover
_Mutation TSP: =two_opt
_Selection KP: =r_tournament_selection_with_replacement
_Crossover KP: =n_point_crossover
_Mutation KP: =exchange
_Population size: =10
_Iteration number: =15
_Survival/mortality rate: =3
_Elitism: =True
_TSP path: =[0, 36, 17, 13, 41, 7, 11, 45, 6, 27, 51, 18, 21, 42, 24, 37, 12, 14, 32, 50, 48, 25, 2, 8, 31, 23, 38, 1, 10, 20, 43, 29, 44, 30, 40, 9, 5, 34, 47, 3, 22, 16, 4, 49, 19, 28, 39, 46, 33, 35, 26, 15]
_KP path: =[[], [1, 1, 0, 1, 1, 1, 0, 0, 1, 0], [1, 1, 1, 0, 1, 0, 0, 1, 0, 0], [1, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 0, 0, 1, 0, 0, 0, 1, 1, 0], [1, 1, 1, 1, 0, 0, 0, 1, 1, 1], [1, 1, 0, 1, 0, 0, 0, 0, 1, 1], [0, 1, 0, 0, 0, 1, 1, 1, 0, 0], [1, 0, 1, 0, 1, 1, 1, 0, 1, 1], [0, 1, 1, 0, 1, 0, 0, 1, 1, 0], [0, 0, 0, 0, 0, 1, 0, 0, 1, 1], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [1, 0, 1, 1, 1, 0, 1, 1, 1, 0], [1, 1, 1, 1, 1, 0, 0, 1, 0, 1], [1, 1, 0, 0, 0, 1, 1, 1, 1, 1], [1, 1, 1, 1, 0, 0, 1, 1, 1, 1], [1, 1, 0, 1, 1, 0, 0, 0, 1, 0], [1, 1, 1, 1, 1, 0, 0, 0, 1, 0], [1, 0, 0, 0, 1, 0, 0, 1, 1, 0], [0, 1, 0, 0, 1, 1, 0, 1, 1, 1], [0, 0, 1, 0, 0, 1, 0, 1, 0, 0], [0, 1, 0, 0, 0, 1, 0, 0, 1, 1], [1, 0, 1, 0, 1, 1, 1, 1, 0, 1], [1, 0, 1, 0, 1, 1, 0, 1, 1, 0], [1, 1, 1, 1, 1, 0, 0, 0, 1, 1], [0, 0, 1, 0, 0, 1, 1, 0, 1, 1], [1, 1, 0, 1, 1, 1, 1, 1, 1, 1], [1, 1, 1, 1, 0, 0, 1, 1, 1, 1], [0, 0, 0, 1, 1, 1, 1, 1, 0, 0], [1, 1, 1, 1, 1, 1, 1, 0, 0, 1], [0, 1, 0, 1, 0, 0, 0, 0, 1, 1], [1, 1, 0, 0, 0, 0, 1, 0, 1, 1], [1, 0, 1, 0, 1, 1, 1, 0, 1, 0], [0, 0, 0, 0, 1, 1, 0, 0, 0, 0], [0, 0, 0, 1, 0, 1, 0, 0, 0, 1], [1, 1, 0, 1, 1, 0, 1, 1, 0, 1], [1, 1, 0, 1, 1, 1, 0, 1, 1, 1], [0, 0, 0, 1, 0, 0, 1, 1, 0, 0], [1, 0, 1, 0, 0, 1, 0, 1, 1, 0], [0, 1, 0, 1, 0, 0, 1, 1, 0, 0], [0, 0, 0, 0, 0, 1, 0, 1, 1, 1], [0, 1, 0, 1, 1, 1, 1, 1, 1, 1], [1, 0, 0, 0, 0, 1, 0, 1, 1, 0], [1, 1, 0, 1, 0, 1, 1, 0, 1, 0], [1, 0, 1, 1, 0, 1, 0, 1, 0, 0], [1, 0, 1, 0, 0, 1, 1, 0, 0, 0], [1, 0, 1, 0, 1, 0, 0, 0, 0, 1], [1, 1, 0, 1, 0, 1, 1, 1, 0, 1], [0, 0, 0, 1, 0, 1, 1, 1, 0, 0], [1, 1, 0, 0, 1, 1, 0, 0, 1, 1], [0, 0, 0, 0, 0, 1, 0, 0, 1, 1], [0, 0, 1, 1, 1, 1, 1, 0, 1, 0]]
_Fitness value of the best chromosome: =17701.64614625816
_Average fitness value of the population: =10499.943141259882
_Age of the best chromosome (num of iterations it has lived): =27
_Local Search function: =greedy_hill_climbing
_Neighborhood TSP: =insertion
_Neighborhood KP: =bit_flip
_Number of neighbors: =10
_Number of max iterations in local search: =20
_KP constraint solver function: =kp_hard_constraint_solver
_