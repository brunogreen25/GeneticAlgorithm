Algorithm type: =AlgorithmType.STEADY_STATE
_Perform separately=False
_Population Initialization function: =init_population
_Next Generation function: =replace_by_random_choice
_Fitness function: =fitness_ttp
_Selection TSP: =linear_ranking_selection
_Crossover TSP=cycle_crossover
_Mutation TSP: =insertion
_Selection KP: =linear_ranking_selection
_Crossover KP: =n_point_crossover
_Mutation KP: =bit_flip
_Population size: =5
_Iteration number: =10
_Survival/mortality rate: =2
_Elitism: =True
_TSP path: =[3, 50, 45, 26, 23, 24, 27, 22, 20, 12, 37, 28, 11, 9, 43, 16, 42, 7, 40, 15, 8, 25, 30, 21, 35, 38, 13, 47, 39, 48, 2, 18, 49, 19, 32, 44, 46, 10, 1, 31, 0, 36, 14, 29, 41, 34, 51, 17, 5, 6, 33, 4]
_KP path: =[[], [0, 1, 1, 1, 1, 1, 0, 0, 1, 0], [1, 1, 1, 1, 1, 0, 1, 0, 1, 1], [1, 0, 1, 0, 0, 0, 0, 0, 1, 0], [0, 0, 0, 1, 1, 1, 0, 0, 0, 1], [0, 0, 0, 1, 0, 1, 0, 0, 0, 1], [0, 0, 0, 0, 0, 1, 0, 1, 1, 1], [0, 0, 0, 0, 1, 0, 1, 0, 0, 0], [0, 0, 1, 0, 0, 1, 0, 0, 1, 1], [0, 1, 1, 1, 0, 0, 0, 0, 0, 1], [1, 1, 0, 1, 1, 0, 0, 0, 0, 1], [0, 1, 1, 0, 0, 0, 1, 0, 1, 0], [0, 1, 0, 0, 0, 0, 1, 1, 0, 1], [0, 0, 0, 0, 1, 0, 1, 1, 0, 1], [0, 0, 1, 1, 0, 0, 0, 0, 1, 0], [1, 1, 1, 1, 0, 1, 0, 0, 1, 0], [1, 0, 0, 0, 0, 0, 1, 0, 1, 0], [0, 0, 1, 1, 0, 1, 0, 1, 1, 0], [0, 1, 0, 1, 1, 0, 0, 1, 0, 1], [0, 0, 0, 1, 1, 1, 0, 0, 1, 0], [1, 1, 1, 1, 0, 1, 0, 0, 0, 1], [0, 0, 0, 0, 0, 0, 1, 0, 0, 1], [1, 1, 0, 1, 1, 0, 0, 1, 1, 0], [1, 1, 1, 0, 1, 1, 0, 0, 0, 0], [1, 1, 0, 1, 1, 0, 1, 0, 1, 0], [1, 1, 0, 1, 0, 1, 1, 0, 0, 0], [1, 0, 1, 1, 0, 0, 1, 1, 0, 1], [1, 1, 0, 1, 0, 1, 0, 0, 1, 1], [1, 1, 1, 1, 0, 1, 1, 0, 1, 0], [1, 0, 0, 1, 1, 1, 1, 1, 0, 0], [0, 0, 1, 0, 1, 1, 1, 1, 1, 1], [1, 1, 0, 0, 0, 0, 0, 1, 0, 1], [0, 0, 0, 1, 1, 1, 0, 0, 1, 0], [1, 0, 0, 1, 1, 0, 0, 1, 1, 0], [1, 0, 1, 1, 1, 0, 0, 0, 0, 0], [0, 0, 0, 1, 0, 1, 0, 0, 1, 1], [1, 0, 1, 0, 1, 0, 0, 1, 0, 0], [1, 0, 0, 0, 0, 1, 0, 0, 0, 0], [0, 1, 0, 0, 1, 1, 0, 0, 0, 1], [0, 1, 1, 0, 1, 0, 0, 1, 0, 0], [0, 0, 0, 0, 1, 0, 0, 1, 0, 0], [1, 1, 1, 0, 0, 1, 0, 1, 0, 0], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1], [1, 0, 1, 0, 0, 0, 1, 0, 0, 0], [0, 0, 1, 1, 1, 0, 0, 0, 1, 1], [1, 0, 1, 0, 0, 0, 0, 1, 1, 1], [1, 1, 0, 0, 1, 1, 0, 0, 1, 1], [0, 0, 1, 1, 0, 0, 0, 1, 1, 1], [1, 1, 0, 1, 0, 0, 1, 1, 0, 1], [1, 1, 1, 0, 0, 0, 1, 1, 0, 1], [1, 1, 0, 0, 0, 0, 1, 1, 0, 0], [1, 0, 0, 0, 1, 0, 0, 0, 1, 0]]
_Fitness value of the best chromosome: =13454.827917377948
_Average fitness value of the population: =10451.0279532701
_Age of the best chromosome (num of iterations it has lived): =9
_Local Search function: =greedy_hill_climbing
_Neighborhood TSP: =insertion
_Neighborhood KP: =bit_flip
_Number of neighbors: =10
_Number of max iterations in local search: =20
_KP constraint solver function: =kp_hard_constraint_solver
_