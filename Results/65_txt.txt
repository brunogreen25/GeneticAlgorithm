Algorithm type: =AlgorithmType.GENERATIONAL
_Perform separately=False
_Population Initialization function: =init_population
_Next Generation function: =replace_the_worst_parent
_Fitness function: =fitness_ttp
_Selection TSP: =r_tournament_selection_with_replacement
_Crossover TSP=order_crossover
_Mutation TSP: =two_opt
_Selection KP: =r_tournament_selection_with_replacement
_Crossover KP: =n_point_crossover
_Mutation KP: =exchange
_Population size: =10
_Iteration number: =15
_Survival/mortality rate: =3
_Elitism: =True
_TSP path: =[27, 12, 46, 34, 9, 41, 47, 48, 37, 49, 10, 43, 6, 18, 21, 0, 19, 40, 2, 16, 23, 32, 14, 51, 42, 8, 5, 11, 17, 15, 20, 31, 3, 25, 50, 45, 7, 39, 26, 28, 24, 36, 29, 1, 13, 33, 35, 44, 38, 30, 4, 22]
_KP path: =[[], [0, 1, 1, 1, 1, 0, 0, 0, 1, 1], [0, 1, 0, 0, 1, 1, 0, 0, 1, 0], [1, 0, 1, 0, 0, 1, 1, 0, 1, 0], [1, 1, 0, 0, 1, 0, 1, 0, 0, 1], [1, 0, 1, 1, 1, 0, 1, 0, 1, 1], [0, 0, 0, 1, 1, 0, 1, 0, 1, 0], [0, 0, 1, 0, 1, 0, 1, 1, 1, 1], [0, 0, 1, 0, 1, 0, 1, 1, 1, 1], [0, 0, 1, 1, 0, 1, 0, 1, 0, 0], [1, 1, 0, 0, 0, 1, 0, 0, 0, 0], [1, 1, 0, 0, 1, 1, 1, 1, 1, 0], [1, 1, 0, 1, 1, 0, 1, 1, 0, 0], [0, 0, 1, 1, 1, 0, 1, 0, 0, 1], [0, 0, 0, 1, 1, 1, 1, 0, 1, 1], [0, 1, 1, 1, 1, 1, 1, 0, 0, 1], [1, 0, 1, 0, 0, 1, 1, 1, 0, 1], [1, 1, 1, 1, 1, 0, 1, 0, 0, 1], [1, 1, 1, 0, 1, 0, 0, 0, 0, 0], [1, 1, 1, 0, 0, 1, 1, 0, 1, 0], [0, 1, 0, 0, 0, 1, 1, 0, 1, 0], [0, 1, 0, 1, 1, 1, 0, 1, 0, 1], [1, 1, 1, 1, 1, 1, 0, 1, 0, 0], [0, 1, 0, 0, 1, 1, 1, 0, 1, 1], [1, 0, 1, 1, 0, 1, 0, 1, 0, 0], [0, 1, 1, 1, 1, 0, 1, 1, 0, 1], [0, 1, 0, 0, 1, 0, 1, 1, 0, 1], [0, 0, 1, 1, 1, 1, 1, 1, 0, 0], [0, 0, 1, 0, 0, 0, 0, 0, 0, 1], [0, 1, 1, 1, 0, 1, 0, 1, 0, 0], [1, 0, 0, 1, 1, 0, 0, 0, 1, 0], [0, 1, 0, 1, 0, 0, 1, 1, 1, 1], [1, 0, 1, 1, 0, 1, 0, 1, 1, 0], [0, 1, 0, 0, 0, 0, 1, 0, 1, 0], [1, 0, 1, 1, 1, 0, 0, 0, 1, 0], [1, 1, 1, 0, 1, 1, 1, 1, 1, 0], [1, 1, 0, 0, 1, 0, 1, 0, 0, 1], [0, 0, 0, 1, 1, 0, 0, 0, 0, 0], [1, 0, 0, 1, 0, 1, 1, 0, 1, 0], [0, 1, 0, 1, 1, 1, 0, 1, 0, 1], [0, 1, 1, 0, 1, 1, 1, 0, 0, 0], [0, 0, 1, 1, 0, 0, 1, 0, 1, 0], [0, 0, 0, 1, 1, 0, 0, 0, 0, 0], [1, 1, 1, 1, 0, 1, 1, 0, 1, 0], [0, 1, 0, 0, 0, 1, 0, 1, 1, 0], [0, 0, 1, 1, 1, 0, 1, 1, 0, 0], [1, 0, 0, 0, 1, 0, 0, 0, 0, 1], [1, 0, 0, 1, 0, 0, 0, 1, 1, 0], [0, 0, 1, 1, 0, 1, 0, 0, 1, 0], [1, 1, 1, 1, 0, 0, 1, 0, 0, 1], [0, 1, 0, 0, 1, 0, 0, 0, 0, 1], [1, 1, 0, 1, 1, 1, 0, 1, 0, 1]]
_Fitness value of the best chromosome: =17140.23097883768
_Average fitness value of the population: =10066.406200288697
_Age of the best chromosome (num of iterations it has lived): =2
_Local Search function: =greedy_hill_climbing
_Neighborhood TSP: =insertion
_Neighborhood KP: =bit_flip
_Number of neighbors: =10
_Number of max iterations in local search: =20
_KP constraint solver function: =kp_hard_constraint_solver
_