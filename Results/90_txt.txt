Algorithm type: =AlgorithmType.STEADY_STATE
_Perform separately=False
_Population Initialization function: =init_population
_Next Generation function: =replace_the_worst_parent
_Fitness function: =fitness_ttp
_Selection TSP: =r_tournament_selection_with_replacement
_Crossover TSP=order_crossover
_Mutation TSP: =two_opt
_Selection KP: =r_tournament_selection_with_replacement
_Crossover KP: =n_point_crossover
_Mutation KP: =exchange
_Population size: =10
_Iteration number: =15
_Survival/mortality rate: =7
_Elitism: =True
_TSP path: =[25, 2, 10, 9, 33, 34, 19, 24, 42, 43, 23, 8, 36, 30, 0, 29, 45, 38, 22, 15, 21, 40, 50, 3, 47, 27, 41, 11, 26, 13, 49, 39, 44, 4, 48, 17, 37, 6, 14, 46, 28, 5, 32, 35, 7, 20, 1, 51, 31, 16, 12, 18]
_KP path: =[[], [1, 0, 0, 0, 1, 1, 1, 1, 1, 1], [1, 0, 1, 1, 1, 1, 0, 0, 0, 1], [1, 1, 0, 1, 1, 0, 0, 0, 0, 1], [1, 1, 1, 0, 0, 1, 1, 1, 0, 0], [1, 0, 1, 0, 1, 0, 0, 0, 0, 1], [1, 1, 1, 0, 0, 1, 1, 0, 1, 1], [0, 1, 0, 0, 0, 1, 1, 1, 1, 1], [0, 1, 1, 1, 0, 0, 1, 1, 1, 0], [1, 1, 1, 0, 1, 0, 0, 0, 0, 1], [1, 1, 1, 1, 1, 1, 0, 0, 1, 0], [0, 1, 1, 1, 1, 0, 1, 1, 1, 1], [0, 0, 0, 1, 0, 1, 0, 1, 0, 0], [1, 1, 1, 0, 1, 1, 0, 0, 1, 1], [0, 0, 1, 1, 1, 0, 0, 0, 1, 1], [1, 0, 1, 1, 0, 0, 0, 0, 0, 1], [1, 1, 1, 0, 1, 0, 1, 1, 1, 1], [0, 0, 0, 1, 1, 1, 1, 0, 0, 1], [0, 1, 0, 0, 1, 0, 1, 0, 1, 1], [1, 1, 0, 0, 0, 0, 0, 0, 0, 1], [0, 0, 1, 0, 1, 0, 1, 1, 0, 1], [1, 1, 0, 1, 1, 0, 0, 1, 1, 0], [1, 1, 1, 1, 1, 1, 0, 0, 0, 0], [0, 0, 0, 1, 0, 1, 1, 1, 1, 1], [1, 1, 1, 0, 1, 1, 1, 0, 1, 0], [1, 1, 1, 0, 0, 1, 0, 0, 1, 1], [0, 0, 1, 1, 0, 0, 1, 1, 1, 0], [0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [1, 1, 0, 0, 1, 1, 0, 1, 1, 1], [1, 1, 1, 1, 0, 0, 0, 1, 0, 0], [1, 0, 0, 0, 0, 1, 1, 1, 1, 0], [0, 0, 1, 1, 1, 1, 1, 1, 0, 0], [1, 1, 1, 1, 1, 1, 1, 1, 1, 0], [0, 1, 1, 1, 0, 1, 1, 1, 0, 0], [0, 1, 1, 0, 0, 0, 1, 1, 1, 0], [1, 1, 1, 1, 1, 1, 1, 1, 1, 0], [0, 1, 0, 0, 0, 1, 1, 1, 0, 1], [0, 0, 0, 1, 0, 0, 1, 0, 0, 0], [1, 1, 0, 1, 1, 1, 1, 1, 1, 0], [1, 1, 1, 0, 1, 1, 1, 1, 0, 0], [1, 0, 0, 1, 1, 1, 1, 0, 1, 1], [1, 1, 1, 1, 0, 0, 0, 0, 0, 0], [1, 0, 1, 1, 1, 1, 0, 1, 1, 0], [1, 0, 0, 0, 1, 0, 1, 0, 0, 0], [1, 0, 0, 1, 1, 0, 1, 1, 0, 0], [1, 1, 1, 1, 1, 1, 0, 1, 1, 0], [1, 0, 1, 1, 0, 1, 1, 0, 1, 1], [1, 1, 1, 0, 0, 1, 0, 0, 0, 1], [0, 1, 0, 1, 0, 0, 0, 0, 1, 1], [0, 1, 0, 1, 1, 0, 1, 0, 0, 1], [0, 0, 1, 0, 0, 1, 1, 1, 0, 0], [0, 1, 1, 0, 1, 1, 1, 1, 0, 1]]
_Fitness value of the best chromosome: =15804.22820260817
_Average fitness value of the population: =14354.698491545938
_Age of the best chromosome (num of iterations it has lived): =14
_Local Search function: =greedy_hill_climbing
_Neighborhood TSP: =insertion
_Neighborhood KP: =bit_flip
_Number of neighbors: =10
_Number of max iterations in local search: =20
_KP constraint solver function: =kp_hard_constraint_solver
_